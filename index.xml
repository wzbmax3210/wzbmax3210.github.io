<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>从入门到秃头</title>
    <link>http://example.org/</link>
    <description>Recent content on 从入门到秃头</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-Hans</language>
    <lastBuildDate>Tue, 29 Oct 2019 15:39:33 +0800</lastBuildDate>
    
	<atom:link href="http://example.org/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>JS语法</title>
      <link>http://example.org/posts/js-syntax/</link>
      <pubDate>Tue, 29 Oct 2019 15:39:33 +0800</pubDate>
      
      <guid>http://example.org/posts/js-syntax/</guid>
      <description>表达式与语句 表达式  1+2 表达式的值为3 add(1,2)表达式的值为函数的返回值 console.log表达式的值为函数本身 console.log(1)表达式的值为undefined  语句 var a = 1 是一个语句
 JS语法中大小写是敏感的
大部分空格没有实际意义
 标识符 第一个字符可以是Unicode字母或$或_或中文接上述字符或数字，例如
 var _ = 1 var $ = 2 var 你好 = &amp;lsquo;hello&amp;rsquo; var $abc123  if&amp;hellip;else if (表达式) { 语句 } else if (表达式) { 语句 } else { 语句 }   {}在语句只有一句的时候可以省略，但是不建议这样做，使用最没有歧义的写法是程序员的戒律
 while for 循环语句 while while (表达式) { 语句 }   判断表达式的真假 当表达式为真时执行语句，执行完再判断表示式真假 表达式为假跳出循环执行后面的语句  for for (语句1;表达式2;语句3) { 循环体 }   执行语句1 判断表达式2 如果为真，执行循环体，然后执行语句3 如果为假，直接跳出循环，执行后面的的语句  break continue 放在循环体中，break退出所有循环，continue退出当前一次循环</description>
    </item>
    
    <item>
      <title>Js概览</title>
      <link>http://example.org/posts/js-view/</link>
      <pubDate>Tue, 29 Oct 2019 15:04:42 +0800</pubDate>
      
      <guid>http://example.org/posts/js-view/</guid>
      <description>JavaScript是布兰登·艾奇(Brendan Eich)于1995年在网景公司的要求下开发的。
起初，他对开发JavaScript没有什么兴趣，只是为了完成任务花了十天就完成了。
他的设计思路主要是:
 借鉴了C语言基本语法 借鉴Java语言的数据类型和内存管理 借鉴Scheme语言，将函数提升到&amp;rdquo;第一等公民&amp;rdquo;(first class)的地位 借鉴Self语言，使用基于原型(prototype)的继承机制  所以JavaScript说好听是集大成，说不好听其实是东拼西凑的语言。而其本人也并不喜欢自己的这个作品。
后来由于种种原因，JavaScript成了浏览器的统一脚本语言，并且业界制定了ECMAScript标准。
到今天由于chrome有大一统pc端浏览器的趋势，同时移动端市场的快速发展，加上ECMAScript新标准的发布，
前端这个岗位需求量越来越大，造就了现在JavaScript很火。
所以，语言的流行不在于它是否有多完美，而是是否能在风口上。所以即使JavaScript如此多缺陷，但是它仍是最流行的语言之一。</description>
    </item>
    
    <item>
      <title>浅析URL</title>
      <link>http://example.org/posts/url/</link>
      <pubDate>Tue, 29 Oct 2019 14:22:02 +0800</pubDate>
      
      <guid>http://example.org/posts/url/</guid>
      <description> 完整的URL包括以下内容
协议 + 域名或IP + 端口号 + 路径 + 查询字符串 + 锚点
例如:https://www.baidu.com/s?wd=hello&amp;amp;rsv_spt=1#5
协议(protocol) 协议一般指网络数据交换规则，诸如HTTP(超文本传输协议)，FTP(文件传输协议)等
IP(Internet Protocol) 简单来说IP主要约定了两件事1:如何定位一台设备。2:如何封装数据报文并与其他设备交流
 几个特殊的ip:127.0.0.1表示自己，localhost通过hosts指定为自己，0.0.0.0不表示任何设备
 端口号(port) IP可以定位一台机器，而一台机器可以通过端口号提供不同的服务，如 - HTTP服务一般是80 - HTTPS服务一般是443 - FTP服务一般是21 - 一共有65535个端口
路径 由零或多个“/”符号隔开的字符串，一般用来表示主机上的一个目录或文件地址。
查询字符串 可选，用于给动态网页传递参数，多个参数用&amp;amp;隔开
锚点 可以定位到网页的某个地方
域名 域名通过DNS(域名系统)解析到公网地址，也就是域名其实就是IP的别称。
 一个域名可以对应多个IP，这叫负载均衡，防止一台机器压力过大
一个IP可以对应多个域名，这叫共享主机
 当你输入域名在浏览器确认时，浏览器会向DNS服务器请求对应的IP，然后返回一个IP请求到相应的机器返回相应的网页内容
 就www.baidu.com来说，com是顶级域名，baidu.com是二级域名，www.baidu.com是三级域名
 </description>
    </item>
    
    <item>
      <title>CSS动画</title>
      <link>http://example.org/posts/css-animation/</link>
      <pubDate>Mon, 28 Oct 2019 17:47:02 +0800</pubDate>
      
      <guid>http://example.org/posts/css-animation/</guid>
      <description>浏览器渲染过程 在说CSS动画之前我们先来看下浏览器的简单渲染过程
 根据HTML构建HTML树(DOM) 根据CSS构建CSS树(CSSOM) 两棵树合并成Render Tree  然后进行Layout布局(文档流、盒模型、计算大小与位置) Paint绘制(边框颜色、文字颜色、阴影等) Composite合成(根据层叠关系展示画面)  JS更新样式 一般来说我们用JS来更新样式，有三种更新方式 如图所示 1. 整个渲染过程要重新走一遍，如div.remove() 2. 跳过layout过程，一般是修改颜色的操作。 3. 跳过layout和paint过程，比如我们要提到的css动画中改变transform
 每个属性的修改触发的流程都不一样，具体可以查看Css Triggers
 CSS动画 介绍CSS动画前先介绍transform
主要的作用是允许我们对元素进行旋转、缩放、移动或倾斜
transform 有四个常用功能
 位移translate 缩放scale 旋转rotate 倾斜skew  具体用法查看transform MDN
 需要注意的是inline元素不支持transform，所以我们需要先将元素变成block元素
 一般CSS动画中有两种做法
transition(过渡) 作用主要是补充中间帧，用法是transition:属性名 时长 过渡方式 延迟
 属性名指规定设置过渡效果的css属性名称，如width，height(值为none时，没有属性会获得过渡效果，值为all时，所有属性都将获得过渡效果，多个属性用逗号隔开) 时长指过渡完所需要的时间，如.5s，200ms 过渡方式指类似动画效果，如linear线性过渡 延迟指多少秒后触发动画，如.5s，200ms  具体用法查看transition MDN
 不是所有属性都能过渡的，如display从block到none是没有过渡效果的。
 下面是用transform + transition制作的红心动画hover效果
animation + keyframes keyframes主要两种写法
@keyframes animationName { from { transform: translateX(0%); } to { transform: translateX(100%); } }  @keyframes animationName { 0% { transform: translateX(0%); } 50% { transform: translateX(50%); } 100% { transform: translateX(100%); } }  具体用法查看@keyframes MDN</description>
    </item>
    
    <item>
      <title>HTML常用标签</title>
      <link>http://example.org/posts/html-tag/</link>
      <pubDate>Wed, 23 Oct 2019 17:06:01 +0800</pubDate>
      
      <guid>http://example.org/posts/html-tag/</guid>
      <description>&amp;lt;a&amp;gt; 作用  跳转外部页面 跳转内部锚点 跳转到邮箱或者电话  属性 href取值  表示http路径/a/b/c(根目录是http服务的目录) 以及 a/b/c
 锚点 # 跳到顶部 #id 跳到对应id的标签
 伪协议 javascript:; 用处：解决点击页面不刷新不变化的需求
 邮箱 mailto:test@gmail.com 电话 tel:13111111111  target取值  _blank 新页面打开 _top iframe打开顶部 _self 本页打开 _parent iframe上一层打开 xxx 打开一个xxx的页面(window.name = xxx)，打开iframe name为xxx的页面  download 作用：不是打开页面，而是下载页面
问题：不是所有浏览器支持，手机浏览器支持程度最差
&amp;lt;table&amp;gt; 相关的标签  &amp;lt;thead&amp;gt; &amp;lt;tbody&amp;gt; &amp;lt;tfoot&amp;gt; &amp;lt;tr&amp;gt;(table row) &amp;lt;td&amp;gt;(table data) &amp;lt;th&amp;gt;(table head)  相关的样式  table-layout设置表格布局算法 auto 浏览器自动 fixed 等宽 border-spacing表格边框间隙 border-collapse collapse合并表格边框  &amp;lt;img&amp;gt; 作用 发出get请求，展示一张图片</description>
    </item>
    
    <item>
      <title>HTML入门笔记1</title>
      <link>http://example.org/posts/html-first/</link>
      <pubDate>Wed, 23 Oct 2019 15:59:12 +0800</pubDate>
      
      <guid>http://example.org/posts/html-first/</guid>
      <description>历史  HTML的英文全称是 Hypertext Marked Language，即超文本标记语言。HTML是由Web的发明者 Tim Berners-Lee(李爵士)和同事 Daniel W. Connolly于1990年创立的一种标记语言——百度百科
 HTML起手式 &amp;lt;!DOCTYPE html&amp;gt; &amp;lt;html lang=&amp;quot;zh-CN&amp;quot;&amp;gt; &amp;lt;head&amp;gt; &amp;lt;meta charset=&amp;quot;utf-8&amp;quot; /&amp;gt; &amp;lt;meta name=&amp;quot;viewport&amp;quot; content=&amp;quot;width=device-width,initial-scale=1.0&amp;quot; /&amp;gt; &amp;lt;meta http-equiv=&amp;quot;X-UA-Compatiable&amp;quot; content=&amp;quot;ie=edge&amp;quot; /&amp;gt; &amp;lt;title&amp;gt;我的网页&amp;lt;/title&amp;gt; &amp;lt;/head&amp;gt; &amp;lt;body&amp;gt;&amp;lt;/body&amp;gt; &amp;lt;/html&amp;gt;  常用的表示章节的标签  h1~h6 表示标题，h1字体最大，依次减少
 section 表示章节
 article 表示文章
 header 放在顶部的结构，比如顶部广告
 footer 放在底部的结构，比如版权声明
 main 主要内容
 aside 旁支内容
  示例 &amp;lt;header&amp;gt;顶部广告&amp;lt;/header&amp;gt; &amp;lt;div&amp;gt; &amp;lt;main&amp;gt; &amp;lt;h1&amp;gt;文章标题&amp;lt;/h1&amp;gt; &amp;lt;section&amp;gt; &amp;lt;h2&amp;gt;第一章&amp;lt;/h2&amp;gt; &amp;lt;p&amp;gt;内容&amp;lt;/p&amp;gt; &amp;lt;setion&amp;gt; &amp;lt;h3&amp;gt;1.1节&amp;lt;/h3&amp;gt; &amp;lt;p&amp;gt;一段话&amp;lt;/p&amp;gt; &amp;lt;/setion&amp;gt; &amp;lt;setion&amp;gt; &amp;lt;h3&amp;gt;1.</description>
    </item>
    
    <item>
      <title>使用Hugo搭建个人博客</title>
      <link>http://example.org/posts/how-to-build-hugo/</link>
      <pubDate>Wed, 23 Oct 2019 14:20:26 +0800</pubDate>
      
      <guid>http://example.org/posts/how-to-build-hugo/</guid>
      <description>1.从Hugo官网的Install页面下载相应系统的安装文件
 因为自己是windows7，所以使用hugo_0.57.2_Windows-64bit.zip解压后得到exe文件 然后将exe文件所在的目录加入环境变量
 2.验证是否安装成功
 在命令行中执行hugo version，安装成功会输出版本信息
我的是Hugo Static Site Generator v0.57.2-A849CB2D windows/amd64 BuildDate: 2019-08-17T17:54:13Z
 3.创建站点
 输入hugo new site myblog就会得到一个myblog的目录
 4.添加文章
 进入myblog目录，输入hugo new posts/first-post.md就会在content/posts下生成first-post.md文件， 就可以在这里面使用md语法写blog。
记得在最终要发布的时候将draft:true改成false，draft是草稿的意思
 5.预览文章
 输入hugo server -D，然后根据提示打开http://localhost:1313/就可以看到文章效果
 6.生成静态页面
 输入hugo就会在public目录下生成静态页面文件 此时可以将public单独设置一个仓库关联github然后就可以将博客上传到github page
 </description>
    </item>
    
  </channel>
</rss>